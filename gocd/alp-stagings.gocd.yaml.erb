---
<% stagings = %w(A B C D E F G H S V Y) -%>
format_version: 3
pipelines:
<% stagings.each do |letter| %>
  ALP.Source.Standard.1_0.Staging.<%= letter %>:
    environment_variables:
      STAGING_PROJECT: SUSE:ALP:Source:Standard:1.0:Staging:<%= letter %>
      STAGING_API: https://api.suse.de
      OSC_CONFIG: /home/go/config/oscrc-staging-bot
    group: ALP.Stagings
    lock_behavior: unlockWhenFinished
    materials:
      stagings:
        git: git://botmaster.suse.de/suse-repos.git
        auto_update: true
        destination: repos
        whitelist:
          - SUSE:ALP:Source:Standard:1.0:Staging:<%= letter %>_-_standard.yaml
      scripts:
        auto_update: true
        git: https://github.com/openSUSE/openSUSE-release-tools.git
        whitelist:
          - DO_NOT_TRIGGER
        destination: scripts
    stages:
    - Checks:
        jobs:
          Check.Build.Succeeds:
            resources:
              - staging-bot
            tasks:
              - script: |-
                  export PYTHONPATH=$PWD/scripts
                  cd scripts/gocd
                  ./report-status.py -A $STAGING_API -p $STAGING_PROJECT -n packagelists -r standard -s pending
                  ./verify-repo-built-successful.py -A $STAGING_API -p $STAGING_PROJECT -r standard
          Repo.Checker:
            environment_variables:
              OSC_CONFIG: /home/go/config/oscrc-staging-bot
            resources:
              - repo-checker
            tasks:
              - script: |-
                  ./scripts/staging-installcheck.py -A $STAGING_API -p SUSE:ALP:Source:Standard:1.0 -s $STAGING_PROJECT
<% end -%>
